version: '3.8'

services:
  clarity-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PORT=8000
      - LOG_LEVEL=debug
      - SKIP_EXTERNAL_SERVICES=true
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy}
      # AWS Cognito config (real values for testing)
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID:-us-east-1_efXaR5EcP}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID:-7sm7ckrkovg78b03n1595euc71}
      - COGNITO_REGION=us-east-1
      - DYNAMODB_TABLE_PREFIX=clarity
      - GEMINI_API_KEY=${GEMINI_API_KEY:-dummy}
    volumes:
      # Mount source for development hot-reload (optional)
      # - ./src:/app/src:ro
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - clarity-network

  # Local DynamoDB for development (replacing Firestore)
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    ports:
      - "8001:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"
    networks:
      - clarity-network

  # Local S3 (MinIO) for development (replacing Cloud Storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - clarity-network

  # Redis for caching (unchanged)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - clarity-network

networks:
  clarity-network:
    driver: bridge

volumes:
  minio-data: